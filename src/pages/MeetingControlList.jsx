import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

function MeetingControlList() {
  const [meetings, setMeetings] = useState([]);
  const [errorMessage, setErrorMessage] = useState(null); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  const [allVoteResults, setAllVoteResults] = useState([]); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è

  useEffect(() => {
    const fetchData = async () => {
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑
        const voteResultsResponse = await axios.get('http://217.114.10.226:5000/api/vote-results');
        setAllVoteResults(voteResultsResponse.data);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞—Å–µ–¥–∞–Ω–∏—è
        const response = await axios.get('http://217.114.10.226:5000/api/meetings');
        console.log('Fetched meetings on frontend:', response.data);

        // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞—Å–µ–¥–∞–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        const meetingsWithResults = await Promise.all(
          response.data.map(async (meeting) => {
            const agendaResponse = await axios.get(`http://217.114.10.226:5000/api/meetings/${meeting.id}/agenda-items`);
            const agendaItems = agendaResponse.data;

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è)
            let voteResultsString = '-';

            // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ–≤–µ—Å—Ç–∫–∏ –∏ –∑–∞—Å–µ–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –∏—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if (agendaItems.length > 0 && meeting.status === 'COMPLETED') {
              const voteResults = agendaItems
                .map(item => allVoteResults.find(result => result.agendaItemId === item.id))
                .filter(result => result !== undefined);

              // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
              voteResultsString = voteResults
                .map(result => `${result.question}, –ó–∞ - ${result.votesFor}, –ü—Ä–æ—Ç–∏–≤ - ${result.votesAgainst}, –í–æ–∑–¥–µ—Ä–∂–∞–ª–∏—Å—å - ${result.votesAbstain}, –ù–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - ${result.votesAbsent}`)
                .join('\n') || '-';
            }

            return {
              ...meeting,
              voteResults: voteResultsString,
            };
          })
        );

        setMeetings(meetingsWithResults);
      } catch (error) {
        console.error('Error fetching meetings:', error.message);
        setErrorMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∑–∞—Å–µ–¥–∞–Ω–∏–π.');
      }
    };

    fetchData();
  }, []);

  const handleArchiveMeeting = async (meetingId) => {
    try {
      await axios.post(`http://217.114.10.226:5000/api/meetings/${meetingId}/archive`);
      setMeetings(meetings.filter(meeting => meeting.id !== meetingId));
    } catch (error) {
      console.error('Error archiving meeting:', error.message);
      setErrorMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞—Å–µ–¥–∞–Ω–∏—è.');
    }
  };

  return (
    <div className="meeting-control-list">
      <h2>–°–ø–∏—Å–æ–∫ –∑–∞—Å–µ–¥–∞–Ω–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
      {errorMessage && (
        <div className="error-message">
          <p>{errorMessage}</p>
        </div>
      )}
      <table className="meetings-table control-meetings-table">
        <thead>
          <tr>
            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th>–ù–∞—á–∞–ª–æ</th>
            <th>–ö–æ–Ω–µ—Ü</th>
            <th>–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–ò—Ç–æ–≥–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è</th>
            <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
            <th></th> {/* –ö–æ–ª–æ–Ω–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è */}
          </tr>
        </thead>
        <tbody>
          {meetings.map(meeting => (
            <tr
              key={meeting.id}
              className={
                meeting.status === 'COMPLETED'
                  ? 'completed-meeting'
                  : meeting.status === 'IN_PROGRESS'
                  ? 'in-progress-meeting'
                  : ''
              }
            >
              <td>{meeting.name}</td>
              <td>{meeting.startTime}</td>
              <td>{meeting.endTime}</td>
              <td className="divisions-column">{meeting.divisions || '–ù–µ—Ç'}</td>
              <td>{meeting.status}</td>
              <td className="vote-results-column">{meeting.voteResults}</td>
              <td>
                <Link to={`/admin/control/meeting/${meeting.id}`}>–£–ø—Ä–∞–≤–ª—è—Ç—å</Link>
              </td>
              <td>
                <button
                  className="archive-icon"
                  onClick={() => handleArchiveMeeting(meeting.id)}
                >
                  üóÉÔ∏è
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default MeetingControlList;